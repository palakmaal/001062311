/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Nurse;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.NurseOrganization;
import Business.Recipient.Recipient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BloodRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author maalp
 */
public class NurseWorkSpaceOld extends javax.swing.JPanel {
    JPanel container;
    NurseOrganization nurseOrganization;
    UserAccount userAccount;
    Enterprise enterprise;
    Network network;

    /**
     * Creates new form NurseWorkSpace
     */
    public NurseWorkSpaceOld(JPanel container, UserAccount account, NurseOrganization nurseOrganization, Enterprise enterprise, Network network) {
        initComponents();
        this.container = container;
        this.nurseOrganization = nurseOrganization;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.network = network;
        refreshTable();
        populateBloodRequestTable();
       
    }

    
    
    
    public void refreshTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) tblPatient.getModel();
        dtm.setRowCount(0);
        for(Recipient patient : nurseOrganization.getPatientDirectory().getPatientList()){
           Object[] row = new Object[3];
           row[0] = patient.getPatientID();
           row[1] = patient;
           row[2] = patient.getDateAdmitted();
            
           dtm.addRow(row);
    }
    }
    
     private void populateBloodRequestTable()
    {
        DefaultTableModel model = (DefaultTableModel)tblBloodRequest.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : nurseOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request.getRequestDate();
            row[1] = request.getPatientName();
            row[2] = request;
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            
            model.addRow(row);
        }
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        leftPanel1 = new javax.swing.JPanel();
        btnRegisterPatient = new javax.swing.JButton();
        btnRecordVitalSigns = new javax.swing.JButton();
        btnDischargePatient = new javax.swing.JButton();
        btnPatientHistory = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnBloodBank = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        nurseContainer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        lblBanner = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblBloodRequest = new javax.swing.JTable();

        jPanel1.setLayout(new java.awt.BorderLayout());

        leftPanel1.setBackground(new java.awt.Color(51, 204, 0));

        btnRegisterPatient.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnRegisterPatient.setText("Register Patient");
        btnRegisterPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterPatientActionPerformed(evt);
            }
        });

        btnRecordVitalSigns.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnRecordVitalSigns.setText("Record Vital Signs");
        btnRecordVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecordVitalSignsActionPerformed(evt);
            }
        });

        btnDischargePatient.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnDischargePatient.setText("Discharge Patient");
        btnDischargePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDischargePatientActionPerformed(evt);
            }
        });

        btnPatientHistory.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnPatientHistory.setText("View Patient History");
        btnPatientHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientHistoryActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnBloodBank.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnBloodBank.setText("View Blood Reserve");
        btnBloodBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloodBankActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanel1Layout = new javax.swing.GroupLayout(leftPanel1);
        leftPanel1.setLayout(leftPanel1Layout);
        leftPanel1Layout.setHorizontalGroup(
            leftPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanel1Layout.createSequentialGroup()
                        .addGroup(leftPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPatientHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRecordVitalSigns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegisterPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDischargePatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnBloodBank, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftPanel1Layout.setVerticalGroup(
            leftPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(btnHome)
                .addGap(77, 77, 77)
                .addComponent(btnRegisterPatient)
                .addGap(78, 78, 78)
                .addComponent(btnRecordVitalSigns)
                .addGap(78, 78, 78)
                .addComponent(btnPatientHistory)
                .addGap(77, 77, 77)
                .addComponent(btnDischargePatient)
                .addGap(76, 76, 76)
                .addComponent(btnBloodBank)
                .addContainerGap(264, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(leftPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addComponent(leftPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(leftPanel);

        rightPanel.setLayout(new java.awt.CardLayout());

        nurseContainer.setBackground(new java.awt.Color(51, 204, 0));
        nurseContainer.setPreferredSize(new java.awt.Dimension(1134, 1014));
        nurseContainer.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                nurseContainerComponentShown(evt);
            }
        });

        tblPatient.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Date Admitted"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatient.setRowHeight(30);
        jScrollPane1.setViewportView(tblPatient);

        btnAccept.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnAccept.setText("Accept");
        btnAccept.setBorder(new javax.swing.border.MatteBorder(null));
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        lblBanner.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        lblBanner.setText("Nurse Work Space");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photos/sp5.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        tblBloodRequest.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        tblBloodRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Date", "Sender", "Blood Type", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBloodRequest.setRowHeight(30);
        jScrollPane4.setViewportView(tblBloodRequest);

        javax.swing.GroupLayout nurseContainerLayout = new javax.swing.GroupLayout(nurseContainer);
        nurseContainer.setLayout(nurseContainerLayout);
        nurseContainerLayout.setHorizontalGroup(
            nurseContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nurseContainerLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(lblBanner)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(nurseContainerLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
            .addGroup(nurseContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nurseContainerLayout.createSequentialGroup()
                    .addContainerGap(515, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22)))
        );
        nurseContainerLayout.setVerticalGroup(
            nurseContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nurseContainerLayout.createSequentialGroup()
                .addGroup(nurseContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblBanner))
                .addGap(26, 26, 26)
                .addGroup(nurseContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nurseContainerLayout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(btnAccept))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(486, Short.MAX_VALUE))
            .addGroup(nurseContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(nurseContainerLayout.createSequentialGroup()
                    .addGap(202, 202, 202)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(553, Short.MAX_VALUE)))
        );

        rightPanel.add(nurseContainer, "card2");

        jSplitPane1.setRightComponent(rightPanel);

        jPanel1.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1228, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 943, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterPatientActionPerformed
        // TODO add your handling code here:
        PatientRegisterOld panel = new PatientRegisterOld(rightPanel, nurseOrganization);
        rightPanel.add("Register New Patient",panel);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
        btnRegisterPatient.setEnabled(false);
        btnBloodBank.setEnabled(false);
        btnDischargePatient.setEnabled(false);
        btnRecordVitalSigns.setEnabled(false);
        btnPatientHistory.setEnabled(false);
    }//GEN-LAST:event_btnRegisterPatientActionPerformed

    private void btnRecordVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecordVitalSignsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPatient.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please Select a Row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            btnRegisterPatient.setEnabled(false);
            btnBloodBank.setEnabled(false);
            btnDischargePatient.setEnabled(false);
            btnRecordVitalSigns.setEnabled(false);
            btnPatientHistory.setEnabled(false);
            Recipient patient  =  (Recipient) tblPatient.getValueAt(selectedRow,1);
            VitalSignRecordOld recordVitalSigns = new VitalSignRecordOld(rightPanel, patient);
            rightPanel.add("RecordvitalSigns", recordVitalSigns);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
    }//GEN-LAST:event_btnRecordVitalSignsActionPerformed

    private void btnDischargePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDischargePatientActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPatient.getSelectedRow();
        if(selectedRow >= 0){
            int dialogResult = JOptionPane.showConfirmDialog(null,"Is the patient's disease treated successfully and want to discharge?","Warning",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                Recipient patient= (Recipient) tblPatient.getValueAt(selectedRow,1);
                DefaultTableModel dtm=(DefaultTableModel) tblPatient.getModel();
                dtm.removeRow(selectedRow);
                refreshTable();
            }
        }
        else
        JOptionPane.showMessageDialog(null, "PLEASE SELECT A ROW","WARNING",JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnDischargePatientActionPerformed

    private void btnPatientHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientHistoryActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPatient.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please Select a Row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            btnRegisterPatient.setEnabled(false);
            btnBloodBank.setEnabled(false);
            btnDischargePatient.setEnabled(false);
            btnRecordVitalSigns.setEnabled(false);
            btnPatientHistory.setEnabled(false);
            Recipient patient  = (Recipient) tblPatient.getValueAt(selectedRow,1);
            PatientHistoryOld patientHistory = new PatientHistoryOld(rightPanel, patient);
            rightPanel.add("Patient History", patientHistory);
            CardLayout layout = (CardLayout) rightPanel.getLayout();
            layout.next(rightPanel);
        }
    }//GEN-LAST:event_btnPatientHistoryActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        rightPanel.removeAll();
        rightPanel.add(nurseContainer);
        refreshTable();
        populateBloodRequestTable();
        btnRegisterPatient.setEnabled(true);
        btnBloodBank.setEnabled(true);
        btnDischargePatient.setEnabled(true);
        btnRecordVitalSigns.setEnabled(true);
        btnPatientHistory.setEnabled(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnBloodBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloodBankActionPerformed
        // TODO add your handling code here:
        btnRegisterPatient.setEnabled(false);
        btnBloodBank.setEnabled(false);
        btnDischargePatient.setEnabled(false);
        btnRecordVitalSigns.setEnabled(false);
        btnPatientHistory.setEnabled(false);
        BloodStorageOld viewBloodBank = new BloodStorageOld(rightPanel, nurseOrganization, network, userAccount);
        rightPanel.add("Blood Bank", viewBloodBank);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.next(rightPanel);
    }//GEN-LAST:event_btnBloodBankActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBloodRequest.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            BloodRequest request = (BloodRequest)tblBloodRequest.getValueAt(selectedRow, 2);
            if(request.getStatus().equalsIgnoreCase("Processed"))
            {
                request.setStatus("Completed");
                populateBloodRequestTable();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Sorry this request is not processed yet!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void nurseContainerComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_nurseContainerComponentShown
        refreshTable();
        populateBloodRequestTable();
        btnRegisterPatient.setEnabled(true);
        btnBloodBank.setEnabled(true);
        btnDischargePatient.setEnabled(true);
        btnRecordVitalSigns.setEnabled(true);
        btnPatientHistory.setEnabled(true);
    }//GEN-LAST:event_nurseContainerComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBloodBank;
    private javax.swing.JButton btnDischargePatient;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnPatientHistory;
    private javax.swing.JButton btnRecordVitalSigns;
    private javax.swing.JButton btnRegisterPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblBanner;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel leftPanel1;
    private javax.swing.JPanel nurseContainer;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTable tblBloodRequest;
    private javax.swing.JTable tblPatient;
    // End of variables declaration//GEN-END:variables
}
