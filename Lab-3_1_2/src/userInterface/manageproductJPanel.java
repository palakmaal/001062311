/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.Product;
import business.productDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Abhi
 */
public class manageproductJPanel extends javax.swing.JPanel {
    private JPanel userprocesscontainer;
    private productDirectory directory;

    /**
     * Creates new form manageproductJPanel
     */
    
    manageproductJPanel(JPanel userprocesscontainer, productDirectory directory) {
        initComponents();
        this.userprocesscontainer= userprocesscontainer;
        this.directory = directory;
        populateTable();
    }
         void populateTable(){
            
            DefaultTableModel dtm = (DefaultTableModel) productjTable.getModel();
            dtm.setRowCount(0);
            for(Product product: directory.getProductList()){
                Object[] row = new Object[4];
                row[0] = product;
                //row[1]= product.getProductName();
                row[1] = product.getAvailnumber();
                row[2] = product.getPrice();
                
                dtm.addRow(row);
                
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productjTable = new javax.swing.JTable();
        searchjButton = new javax.swing.JButton();
        deletejButton = new javax.swing.JButton();
        viewjButton = new javax.swing.JButton();
        productnamejTextField = new javax.swing.JTextField();
        backjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        productjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Availablity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productjTable);
        if (productjTable.getColumnModel().getColumnCount() > 0) {
            productjTable.getColumnModel().getColumn(0).setResizable(false);
            productjTable.getColumnModel().getColumn(1).setResizable(false);
            productjTable.getColumnModel().getColumn(2).setResizable(false);
        }

        searchjButton.setText("SEARCH");
        searchjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchjButtonActionPerformed(evt);
            }
        });

        deletejButton.setText("DELETE");
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });

        viewjButton.setText("VIEW DETAILS");
        viewjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewjButtonActionPerformed(evt);
            }
        });

        backjButton.setText("< BACK");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(viewjButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(productnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchjButton)
                    .addComponent(productnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewjButton)
                    .addComponent(deletejButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(backjButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userprocesscontainer.remove(this);
        CardLayout layout =(CardLayout) userprocesscontainer.getLayout();
        layout.previous(userprocesscontainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = productjTable.getSelectedRow();
        if(selectedRow >= 0){
            int dailogButton = JOptionPane.YES_NO_OPTION;
            int dailogResult = JOptionPane.showConfirmDialog(null,"would you like to delete the product?", "Warning",dailogButton);
            if(dailogResult== JOptionPane.YES_OPTION){
                Product product = (Product)productjTable.getValueAt(selectedRow,0);
                directory.deleteProduct(product);
                populateTable();
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select a row from the table","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deletejButtonActionPerformed

    private void viewjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = productjTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from the table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
           Product product = (Product)productjTable.getValueAt(selectedRow, 0);
            
            viewproductJPanel panel1 =new viewproductJPanel(userprocesscontainer, product);
             userprocesscontainer.add("viewproductJPanel", panel1);
             CardLayout layout = (CardLayout) userprocesscontainer.getLayout();
             layout.next(userprocesscontainer);
        }
    }//GEN-LAST:event_viewjButtonActionPerformed

    private void searchjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchjButtonActionPerformed
        // TODO add your handling code here:
        Product result = directory.searchProduct(productnamejTextField.getText());
        if(result== null){
          JOptionPane.showMessageDialog(null,"Product name you entered doesnot exist","Information",JOptionPane.INFORMATION_MESSAGE);  
        }
        else{
            DefaultTableModel dtm=(DefaultTableModel) productjTable.getModel();
        TableRowSorter<DefaultTableModel>tr=new TableRowSorter<>(dtm);
        productjTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(productnamejTextField.getText().trim()));
        }
    }//GEN-LAST:event_searchjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        productnamejTextField.setText("");
        Product result = directory.searchProduct(productnamejTextField.getText());
        DefaultTableModel dtm=(DefaultTableModel) productjTable.getModel();
        TableRowSorter<DefaultTableModel>tr=new TableRowSorter<>(dtm);
        productjTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(productnamejTextField.getText().trim()));
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JButton deletejButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable productjTable;
    private javax.swing.JTextField productnamejTextField;
    private javax.swing.JButton searchjButton;
    private javax.swing.JButton viewjButton;
    // End of variables declaration//GEN-END:variables
}
